/* ==================================== JUCER_BINARY_RESOURCE ====================================

   This is an auto-generated file: Any edits you make may be overwritten!

*/

namespace BinaryData
{

//================== Delete.png ==================
static const unsigned char temp_binary_data_0[] =
{ 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,100,0,0,0,72,8,6,0,0,0,0,140,80,25,0,0,0,1,115,82,71,66,0,174,206,28,233,0,0,0,68,101,88,73,102,77,77,0,42,0,0,0,8,0,1,135,105,0,4,0,0,0,1,0,0,0,26,0,0,0,0,0,3,160,1,0,3,0,0,0,1,0,1,0,0,160,2,0,4,0,
0,0,1,0,0,0,100,160,3,0,4,0,0,0,1,0,0,0,72,0,0,0,0,43,138,28,68,0,0,9,147,73,68,65,84,120,1,237,156,107,108,28,213,21,199,247,97,59,38,45,229,173,240,136,74,95,20,80,10,84,45,21,36,148,20,132,218,74,240,165,106,212,146,168,84,106,16,15,209,16,30,106,
80,139,10,37,31,80,136,72,131,26,81,4,95,104,81,41,132,170,253,18,85,109,90,10,4,164,128,104,18,170,240,193,66,40,18,6,66,140,35,99,155,196,142,95,187,59,195,239,108,118,205,120,247,158,217,187,115,103,118,215,238,140,52,153,241,57,247,158,115,254,231,
127,239,153,59,143,108,38,147,110,105,6,210,12,164,25,152,55,25,200,182,42,82,223,247,197,215,146,136,254,90,22,103,196,248,130,221,166,179,217,236,72,80,208,204,121,87,51,141,93,218,122,158,119,71,46,151,251,133,139,141,121,210,247,53,226,92,29,53,214,
150,16,50,61,61,125,81,54,151,187,159,32,79,141,26,104,27,250,69,157,149,81,171,64,25,98,226,132,80,170,22,177,111,5,221,105,109,72,106,59,92,122,46,78,115,46,157,109,250,82,170,238,162,166,126,215,166,109,218,38,147,73,148,144,153,153,153,75,114,217,
220,125,105,162,237,51,144,88,201,170,148,170,71,51,217,204,103,67,194,41,132,232,58,93,37,131,57,31,119,144,137,17,66,169,186,147,85,213,149,74,192,147,165,82,105,77,62,159,63,160,232,59,94,92,40,20,126,222,221,221,189,46,238,64,19,33,132,85,213,197,
97,165,10,178,182,116,117,117,237,136,27,76,43,237,77,78,78,14,66,72,236,46,99,39,132,82,213,195,46,165,234,68,83,180,232,246,48,115,54,155,116,243,76,22,123,185,18,252,177,95,212,165,84,177,170,90,105,76,174,159,153,40,22,139,183,163,159,52,234,83,97,
188,132,200,13,32,163,95,110,0,141,155,231,123,155,123,122,122,246,26,149,169,176,156,129,216,74,214,108,169,202,168,165,234,117,200,218,146,230,61,60,3,177,149,44,74,213,122,74,209,119,76,238,32,235,24,165,106,29,250,41,147,62,149,125,154,129,88,8,161,
84,125,141,209,255,155,79,205,206,61,131,144,77,148,170,255,205,149,166,127,153,50,224,92,178,72,118,55,251,163,24,255,156,201,1,186,87,33,107,171,73,151,202,234,51,224,60,67,42,165,234,170,122,211,153,12,100,140,87,86,85,211,38,189,173,12,59,78,79,80,
53,63,216,61,149,221,121,80,106,246,163,200,157,8,161,84,45,99,244,63,160,57,6,236,131,148,170,253,154,222,70,14,161,107,177,179,135,59,227,171,109,218,219,182,153,152,152,56,7,187,187,104,255,123,142,78,121,176,245,153,104,59,64,116,51,59,94,226,104,
220,208,189,130,162,199,37,8,200,248,25,54,102,42,14,134,32,101,185,139,189,106,223,241,241,241,37,196,247,223,64,224,77,147,194,157,250,3,129,254,193,211,23,171,126,90,122,228,89,212,221,193,40,130,231,128,61,42,247,36,46,1,213,144,81,54,143,221,1,158,
32,127,195,197,238,209,163,71,79,195,206,238,96,188,149,243,166,72,233,40,66,0,176,140,253,99,3,168,178,136,145,28,249,85,45,6,114,144,125,11,199,234,204,152,227,134,100,190,39,165,50,10,41,163,163,163,39,211,255,197,57,6,231,254,33,164,156,96,99,187,
99,8,33,96,41,85,42,40,116,82,198,34,63,117,171,216,223,193,81,221,240,113,96,106,106,234,60,155,196,85,219,12,13,13,157,72,191,127,169,70,81,160,127,159,195,89,213,62,97,199,142,33,132,209,123,167,6,10,64,31,71,29,189,65,240,35,35,35,39,97,235,121,205,
143,200,209,247,145,148,207,7,251,105,231,190,63,176,216,243,138,161,36,131,235,125,121,161,166,217,168,149,119,4,33,228,225,66,118,181,84,1,234,174,218,192,163,254,141,147,83,72,250,203,146,124,109,67,255,6,186,208,17,221,223,223,223,91,240,138,127,
213,108,136,156,184,63,56,118,236,88,83,215,166,182,19,66,220,93,36,224,63,26,176,130,231,189,32,109,162,18,96,234,55,54,54,118,6,62,95,213,124,138,28,253,107,92,168,79,55,245,71,221,205,226,224,207,97,253,75,158,119,8,50,46,53,245,15,147,181,157,16,
70,209,29,26,48,146,50,74,169,186,48,12,64,84,29,75,212,51,177,191,87,243,45,114,244,114,221,58,41,232,99,215,174,93,93,144,241,100,131,126,3,144,241,173,96,63,219,243,182,18,2,168,11,216,71,53,112,212,222,245,182,64,162,180,227,38,110,41,73,223,175,
249,23,57,250,127,112,40,191,191,223,184,113,99,142,152,158,104,208,94,150,208,145,200,16,12,109,35,4,80,148,42,255,223,26,56,18,33,43,151,88,75,149,137,52,18,240,5,124,245,105,113,136,28,253,223,246,237,219,119,58,4,202,242,85,221,104,247,33,100,92,
102,242,99,43,107,27,33,148,170,219,53,100,0,27,102,249,249,85,91,16,174,237,240,245,21,124,190,173,197,35,114,18,213,79,204,106,147,56,200,16,28,109,33,4,84,231,179,143,104,232,0,126,155,107,146,155,237,207,181,234,2,46,196,239,104,49,133,201,33,99,
144,153,113,121,179,62,77,237,91,78,8,192,242,20,129,157,26,64,192,253,83,218,152,130,77,90,6,41,23,225,95,110,226,172,55,218,31,46,20,38,86,196,21,91,59,8,185,77,67,11,184,33,41,31,113,129,139,98,71,238,27,188,146,119,72,139,49,40,63,78,70,225,138,40,
126,180,62,45,37,4,48,95,98,215,86,85,30,211,254,102,45,208,86,202,229,254,129,100,31,9,38,191,246,28,253,56,207,214,98,37,67,48,38,69,136,246,30,96,12,159,31,41,201,229,213,120,246,20,69,215,82,113,111,111,239,202,108,54,211,27,230,148,88,229,21,64,
172,239,82,194,252,37,166,99,164,93,199,110,92,174,200,168,99,150,124,51,49,231,22,134,241,191,190,118,54,132,253,205,2,36,214,143,190,147,154,33,161,208,1,168,222,233,66,202,235,7,15,30,180,122,84,29,234,36,130,146,59,240,155,88,112,20,195,8,48,233,
40,93,191,140,224,206,216,165,93,132,44,1,216,187,38,112,34,3,224,70,99,180,9,10,89,97,253,132,193,96,124,87,162,197,89,149,211,207,103,102,221,29,71,120,109,33,68,2,7,204,42,118,175,10,42,120,4,224,4,0,99,89,215,219,36,137,153,241,67,124,78,6,99,168,
57,167,50,149,158,160,77,216,133,222,163,141,243,163,158,182,17,82,33,229,233,26,224,179,127,2,126,223,224,224,224,103,108,18,234,210,6,50,174,197,215,216,172,99,195,9,137,46,191,169,164,237,42,38,67,40,113,12,164,91,93,226,105,55,33,103,129,255,160,
33,7,101,17,165,107,147,11,184,70,125,177,127,53,100,168,239,97,36,8,200,152,243,245,139,148,54,38,182,90,218,176,87,128,148,27,27,249,214,244,109,37,68,130,2,243,143,203,217,55,252,3,184,41,146,246,109,45,120,23,57,118,151,243,145,246,144,193,237,172,
8,50,30,54,249,144,139,63,177,133,93,252,103,104,243,83,83,223,70,178,182,19,34,1,2,252,153,217,44,212,156,0,252,77,121,111,221,8,72,51,122,70,240,215,177,27,122,55,78,76,143,17,138,250,95,152,177,33,15,71,141,215,192,10,132,41,72,185,190,153,184,164,
109,71,16,2,128,179,217,63,168,0,169,59,48,154,127,219,44,48,173,253,52,239,96,32,163,191,206,73,64,80,44,150,254,200,159,13,159,167,17,215,134,64,55,211,233,4,194,31,104,177,152,228,29,65,136,4,198,104,90,109,66,84,145,205,0,222,249,174,24,91,242,232,
230,173,16,63,126,177,84,250,11,250,69,166,100,153,100,196,117,95,152,61,116,178,96,248,190,169,175,73,214,49,132,72,112,148,137,237,26,56,70,117,159,124,53,98,2,97,35,195,46,79,153,253,157,154,125,145,227,227,239,3,124,73,98,99,47,216,6,82,30,108,96,
119,88,62,49,13,246,209,206,59,138,16,64,201,119,177,106,233,130,176,109,26,16,27,57,182,87,178,31,102,175,219,32,227,133,225,225,97,227,151,246,54,182,137,109,107,157,81,4,216,245,89,153,253,138,83,171,111,202,58,138,16,1,78,233,90,99,2,86,150,177,164,
100,251,158,77,130,180,54,244,95,65,150,230,144,66,210,118,203,167,160,90,31,27,57,241,101,137,93,22,2,193,77,158,96,55,245,9,83,199,17,34,224,27,148,174,183,143,28,57,226,244,99,51,36,233,114,6,238,135,146,57,200,120,131,199,237,161,223,96,217,16,34,
109,48,151,39,246,63,84,24,225,114,84,90,103,219,183,218,174,35,9,1,80,163,210,245,120,21,64,212,227,113,82,188,157,36,224,220,168,54,76,253,250,250,252,30,102,202,159,192,208,52,25,98,175,35,9,145,192,252,162,175,151,46,223,7,115,241,58,105,183,208,
182,164,8,209,94,80,89,231,47,219,149,221,158,241,50,207,41,29,242,252,135,158,109,242,5,162,162,79,197,53,25,112,38,164,108,47,151,217,192,241,80,141,237,242,159,188,177,251,242,9,139,23,63,100,210,165,178,250,12,196,66,8,73,23,50,238,169,55,127,92,
194,52,89,75,233,106,234,78,88,179,181,208,229,177,16,34,73,130,148,237,94,198,211,74,23,149,43,247,59,249,175,100,11,61,161,174,248,98,35,68,2,201,101,114,97,165,235,92,62,74,216,226,26,240,66,239,31,43,33,82,186,88,211,235,165,43,159,191,129,210,245,
163,133,158,84,23,124,177,18,34,129,240,59,88,219,185,137,211,74,23,63,78,154,123,132,27,188,179,93,130,94,200,125,99,39,68,146,69,210,165,116,13,152,18,199,44,90,218,187,104,209,86,147,110,158,201,102,146,136,55,145,255,70,32,165,139,210,180,129,159,
240,123,214,20,116,46,159,95,205,189,201,97,246,247,104,147,149,71,24,181,237,144,87,69,117,58,81,112,189,10,254,218,151,177,205,113,3,180,52,15,187,144,62,85,215,161,71,237,231,11,67,59,53,82,170,111,218,26,117,180,209,203,179,46,102,139,250,43,207,
6,30,108,204,118,68,27,6,157,22,199,75,232,174,209,148,141,228,137,204,144,170,211,74,233,146,95,151,51,94,51,66,64,85,77,252,223,29,205,147,57,166,52,72,233,98,150,200,245,36,221,44,51,144,40,33,18,67,101,213,245,20,167,174,53,91,204,205,135,77,173,
101,54,193,39,90,178,170,1,80,186,126,205,185,92,4,191,88,149,45,224,99,231,19,66,233,26,96,213,117,15,43,167,123,33,194,41,224,121,64,228,91,46,49,182,52,57,172,170,122,92,130,157,39,125,125,6,96,97,158,196,154,134,153,102,32,205,64,154,1,151,12,124,
2,8,29,101,151,249,143,20,51,0,0,0,0,73,69,78,68,174,66,96,130,0,0 };

const char* Delete_png = (const char*) temp_binary_data_0;


const char* getNamedResource (const char* resourceNameUTF8, int& numBytes);
const char* getNamedResource (const char* resourceNameUTF8, int& numBytes)
{
    unsigned int hash = 0;

    if (resourceNameUTF8 != nullptr)
        while (*resourceNameUTF8 != 0)
            hash = 31 * hash + (unsigned int) *resourceNameUTF8++;

    switch (hash)
    {
        case 0xe00475b5:  numBytes = 2601; return Delete_png;
        default: break;
    }

    numBytes = 0;
    return nullptr;
}

const char* namedResourceList[] =
{
    "Delete_png"
};

const char* originalFilenames[] =
{
    "Delete.png"
};

const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8);
const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8)
{
    for (unsigned int i = 0; i < (sizeof (namedResourceList) / sizeof (namedResourceList[0])); ++i)
    {
        if (namedResourceList[i] == resourceNameUTF8)
            return originalFilenames[i];
    }

    return nullptr;
}

}
